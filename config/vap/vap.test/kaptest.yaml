validatingAdmissionPolicies:
- ../vap.yaml
resources:
- imageprefetch-resources.yaml
- nodeimageset-resources.yaml
- params.yaml
testSuites:
- policy: imageprefetch-validation.cybozu.io
  tests:
  # images must not be empty
  - object:
      kind: ImagePrefetch
      name: invalid-images-imageprefetch
    expect: deny
    param:
      name: config
  # replicas cannot be set when allNodes is true
  - object:
      kind: ImagePrefetch
      name: invalid-node-selector-imageprefetch
    expect: deny
    param:
      name: config
  # replicas must be greater than 0 when allNodes is false
  - object:
      kind: ImagePrefetch
      name: invalid-replicas-imageprefetch
    expect: deny
    param:
     name: config
  # replicas must be a non-negative number
  - object:
      kind: ImagePrefetch
      name: negative-replicas-imageprefetch
    expect: deny
    param:
      name: config
  # imagePullSecrets must be a list of non-empty names
  - object:
      kind: ImagePrefetch
      name: empty-imagepullsecrets-imageprefetch
    expect: deny
    param:
      name: config
  # images must start with one of the permitted registries
  - object:
      kind: ImagePrefetch
      name: not-permitted-registry-imageprefetch
    expect: deny
    param:
      name: config
  # nodeSelector must be a map with non-empty keys and values
  - object:
      kind: ImagePrefetch
      name: invalid-nodeselector-imageprefetch
    expect: deny
    param:
      name: config
  # Valid cases
  - object:
      kind: ImagePrefetch
      name: valid-replicas-imageprefetch
    expect: admit
    param:
     name: config
  - object:
      kind: ImagePrefetch
      name: valid-allnodes-imageprefetch
    expect: admit
    param:
      name: config
- policy: nodeimageset-validation.cybozu.io
  tests:
  # images must not be empty
  - object:
      kind: NodeImageSet
      name: invalid-image-nodeimageset
    expect: deny
    param:
      name: config
  # images must start with one of the permitted registries
  - object:
      kind: NodeImageSet
      name: invalid-registry-nodeimageset
    expect: deny
    param:
      name: config
  # nodeName must be specified and not empty
  - object:
      kind: NodeImageSet
      name: invalid-nodename-nodeimageset
    expect: deny
    param:
      name: config
  # registryPolicy must be either 'Default' or 'MirrorOnly'
  - object:
      kind: NodeImageSet
      name: invalid-registrypolicy-nodeimageset
    expect: deny
    param:
      name: config
  # imagePullSecrets must be a list of non-empty names
  - object:
      kind: NodeImageSet
      name: invalid-image-pull-secrets-nodeimageset
    expect: deny
    param:
      name: config
  # Valid cases
  - object:
      kind: NodeImageSet
      name: valid-nodeimageset
    expect: admit
    param:
      name: config
  - object:
      kind: NodeImageSet
      name: valid-mirroronly-nodeimageset
    expect: admit
    param:
      name: config
