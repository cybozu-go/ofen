apiVersion: apps/v1
kind: Deployment
metadata:
  name: ofen-controller
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: {{ include "ofen.name" . }}
    {{- include "ofen.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controller.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/name: {{ include "ofen.name" . }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/name: {{ include "ofen.name" . }}
    spec:
      containers:
        - name: manager
          image: "{{ .Values.controller.image.repository }}:{{ default .Chart.AppVersion .Values.controller.image.tag }}"
          imagePullPolicy: {{ .Values.controller.image.pullPolicy }}
          {{- with .Values.controller.extraArgs }}
          args:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - containerPort: 8081
              name: health
              protocol: TCP
            - containerPort: 8080
              name: metrics
              protocol: TCP
          {{- with .Values.controller.resources }}
          resources: {{ toYaml . | nindent 12 }}
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
          livenessProbe:
            httpGet:
              path: /healthz
              port: health
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: health
            initialDelaySeconds: 5
            periodSeconds: 10
      securityContext:
        runAsNonRoot: true
      serviceAccountName: '{{ template "ofen.fullname" . }}-controller-manager'
      terminationGracePeriodSeconds: 10
