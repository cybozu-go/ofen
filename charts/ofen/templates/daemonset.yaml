apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: ofen-daemon
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: daemon
    app.kubernetes.io/name: {{ include "ofen.name" . }}-daemon
    {{- include "ofen.labels" . | nindent 4  }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: daemon
      app.kubernetes.io/name: {{ include "ofen.name" . }}-daemon
  template:
    metadata:
      labels:
        app.kubernetes.io/component: daemon
        app.kubernetes.io/name: {{ include "ofen.name" . }}-daemon
    spec:
      containers:
        - name: ofend
          image: "{{ .Values.daemon.image.repository }}:{{ default .Chart.AppVersion .Values.daemon.image.tag }}"
          imagePullPolicy: {{ .Values.daemon.image.pullPolicy }}
          args: 
            - --containerd-socket={{ .Values.daemon.containerdSockPath }}
            - --containerd-host-dir={{ .Values.daemon.containerdHostDirPath }}
          {{- with .Values.daemon.extraArgs }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          ports:
            - containerPort: 8081
              name: health
              protocol: TCP
            - containerPort: 8080
              name: metrics
              protocol: TCP
          {{- with .Values.daemon.resources }}
          resources: {{ toYaml . | nindent 12 }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: health
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: health
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
            - name: containerd-sock
              mountPath: {{ .Values.daemon.containerdSockPath }}
            - name: containerd-host-dir
              mountPath: {{ .Values.daemon.containerdHostDirPath }}
      securityContext:
        runAsUser: 0 # Run as root to mount containerd socket
      serviceAccountName: '{{ template "ofen.fullname" . }}-controller-manager'
      terminationGracePeriodSeconds: 10
      volumes:
        - name: containerd-sock
          hostPath:
            path: {{ .Values.daemon.containerdSockPath }}
        - name: containerd-host-dir
          hostPath:
            path: {{ .Values.daemon.containerdHostDirPath }}
      tolerations:
        - key: node-role.kubernetes.io/control-plane
          effect: NoSchedule
