name: Release
on:
  push:
    tags:
      - "v*"
jobs:
  image-build:
    name: Push Container Image
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Get version
        id: get_version
        run: |
          version=${GITHUB_REF#refs/tags/v}
          echo "result=${version}" >> $GITHUB_OUTPUT
      - uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64
      - uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push ofen image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: dockerfiles/Dockerfile.imageprefetch-controller
          push: true
          tags: |
            ghcr.io/cybozu-go/ofen:${{steps.get_version.outputs.result}}
      - name: Build and push ofend image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: dockerfiles/Dockerfile.nodeimageset-controller
          push: true
          tags: |
            ghcr.io/cybozu-go/ofend:${{steps.get_version.outputs.result}}
  release:
    name: Release on GitHub
    needs: image-build
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=${GITHUB_REF#refs/tags/} # Don't remove "v" prefix.
          if echo ${VERSION} | grep -q -e '-'; then PRERELEASE_FLAG=-p; fi
          gh release create $VERSION $PRERELEASE_FLAG \
            -t "Release $VERSION"  \
            --generate-notes 
