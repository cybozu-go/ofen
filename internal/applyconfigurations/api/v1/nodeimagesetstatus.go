// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "k8s.io/client-go/applyconfigurations/meta/v1"
)

// NodeImageSetStatusApplyConfiguration represents a declarative configuration of the NodeImageSetStatus type for use
// with apply.
type NodeImageSetStatusApplyConfiguration struct {
	ObservedGeneration   *int64                           `json:"observedGeneration,omitempty"`
	Conditions           []v1.ConditionApplyConfiguration `json:"conditions,omitempty"`
	DesiredImages        *int                             `json:"desiredImages,omitempty"`
	AvailableImages      *int                             `json:"availableImages,omitempty"`
	DownloadFailedImages *int                             `json:"downloadFailedImages,omitempty"`
}

// NodeImageSetStatusApplyConfiguration constructs a declarative configuration of the NodeImageSetStatus type for use with
// apply.
func NodeImageSetStatus() *NodeImageSetStatusApplyConfiguration {
	return &NodeImageSetStatusApplyConfiguration{}
}

// WithObservedGeneration sets the ObservedGeneration field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ObservedGeneration field is set to the value of the last call.
func (b *NodeImageSetStatusApplyConfiguration) WithObservedGeneration(value int64) *NodeImageSetStatusApplyConfiguration {
	b.ObservedGeneration = &value
	return b
}

// WithConditions adds the given value to the Conditions field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Conditions field.
func (b *NodeImageSetStatusApplyConfiguration) WithConditions(values ...*v1.ConditionApplyConfiguration) *NodeImageSetStatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithConditions")
		}
		b.Conditions = append(b.Conditions, *values[i])
	}
	return b
}

// WithDesiredImages sets the DesiredImages field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DesiredImages field is set to the value of the last call.
func (b *NodeImageSetStatusApplyConfiguration) WithDesiredImages(value int) *NodeImageSetStatusApplyConfiguration {
	b.DesiredImages = &value
	return b
}

// WithAvailableImages sets the AvailableImages field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AvailableImages field is set to the value of the last call.
func (b *NodeImageSetStatusApplyConfiguration) WithAvailableImages(value int) *NodeImageSetStatusApplyConfiguration {
	b.AvailableImages = &value
	return b
}

// WithDownloadFailedImages sets the DownloadFailedImages field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DownloadFailedImages field is set to the value of the last call.
func (b *NodeImageSetStatusApplyConfiguration) WithDownloadFailedImages(value int) *NodeImageSetStatusApplyConfiguration {
	b.DownloadFailedImages = &value
	return b
}
