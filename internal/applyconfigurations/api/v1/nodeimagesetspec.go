// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/cybozu-go/ofen/api/v1"
	corev1 "k8s.io/api/core/v1"
)

// NodeImageSetSpecApplyConfiguration represents a declarative configuration of the NodeImageSetSpec type for use
// with apply.
type NodeImageSetSpecApplyConfiguration struct {
	Images           []string                      `json:"images,omitempty"`
	RegistryPolicy   *v1.RegistryPolicy            `json:"registryPolicy,omitempty"`
	NodeName         *string                       `json:"nodeName,omitempty"`
	ImagePullSecrets []corev1.LocalObjectReference `json:"imagePullSecrets,omitempty"`
}

// NodeImageSetSpecApplyConfiguration constructs a declarative configuration of the NodeImageSetSpec type for use with
// apply.
func NodeImageSetSpec() *NodeImageSetSpecApplyConfiguration {
	return &NodeImageSetSpecApplyConfiguration{}
}

// WithImages adds the given value to the Images field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Images field.
func (b *NodeImageSetSpecApplyConfiguration) WithImages(values ...string) *NodeImageSetSpecApplyConfiguration {
	for i := range values {
		b.Images = append(b.Images, values[i])
	}
	return b
}

// WithRegistryPolicy sets the RegistryPolicy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RegistryPolicy field is set to the value of the last call.
func (b *NodeImageSetSpecApplyConfiguration) WithRegistryPolicy(value v1.RegistryPolicy) *NodeImageSetSpecApplyConfiguration {
	b.RegistryPolicy = &value
	return b
}

// WithNodeName sets the NodeName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the NodeName field is set to the value of the last call.
func (b *NodeImageSetSpecApplyConfiguration) WithNodeName(value string) *NodeImageSetSpecApplyConfiguration {
	b.NodeName = &value
	return b
}

// WithImagePullSecrets adds the given value to the ImagePullSecrets field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the ImagePullSecrets field.
func (b *NodeImageSetSpecApplyConfiguration) WithImagePullSecrets(values ...corev1.LocalObjectReference) *NodeImageSetSpecApplyConfiguration {
	for i := range values {
		b.ImagePullSecrets = append(b.ImagePullSecrets, values[i])
	}
	return b
}
