// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	metav1 "k8s.io/client-go/applyconfigurations/meta/v1"
)

// ImagePrefetchStatusApplyConfiguration represents a declarative configuration of the ImagePrefetchStatus type for use
// with apply.
type ImagePrefetchStatusApplyConfiguration struct {
	ObservedGeneration   *int64                               `json:"observedGeneration,omitempty"`
	Conditions           []metav1.ConditionApplyConfiguration `json:"conditions,omitempty"`
	DesiredNodes         *int                                 `json:"desiredNodes,omitempty"`
	ImagePulledNodes     *int                                 `json:"imagePulledNodes,omitempty"`
	ImagePullingNodes    *int                                 `json:"imagePullingNodes,omitempty"`
	ImagePullFailedNodes *int                                 `json:"imagePullFailedNodes,omitempty"`
	SelectedNodes        []string                             `json:"selectedNodes,omitempty"`
}

// ImagePrefetchStatusApplyConfiguration constructs a declarative configuration of the ImagePrefetchStatus type for use with
// apply.
func ImagePrefetchStatus() *ImagePrefetchStatusApplyConfiguration {
	return &ImagePrefetchStatusApplyConfiguration{}
}

// WithObservedGeneration sets the ObservedGeneration field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ObservedGeneration field is set to the value of the last call.
func (b *ImagePrefetchStatusApplyConfiguration) WithObservedGeneration(value int64) *ImagePrefetchStatusApplyConfiguration {
	b.ObservedGeneration = &value
	return b
}

// WithConditions adds the given value to the Conditions field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Conditions field.
func (b *ImagePrefetchStatusApplyConfiguration) WithConditions(values ...*metav1.ConditionApplyConfiguration) *ImagePrefetchStatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithConditions")
		}
		b.Conditions = append(b.Conditions, *values[i])
	}
	return b
}

// WithDesiredNodes sets the DesiredNodes field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DesiredNodes field is set to the value of the last call.
func (b *ImagePrefetchStatusApplyConfiguration) WithDesiredNodes(value int) *ImagePrefetchStatusApplyConfiguration {
	b.DesiredNodes = &value
	return b
}

// WithImagePulledNodes sets the ImagePulledNodes field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ImagePulledNodes field is set to the value of the last call.
func (b *ImagePrefetchStatusApplyConfiguration) WithImagePulledNodes(value int) *ImagePrefetchStatusApplyConfiguration {
	b.ImagePulledNodes = &value
	return b
}

// WithImagePullingNodes sets the ImagePullingNodes field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ImagePullingNodes field is set to the value of the last call.
func (b *ImagePrefetchStatusApplyConfiguration) WithImagePullingNodes(value int) *ImagePrefetchStatusApplyConfiguration {
	b.ImagePullingNodes = &value
	return b
}

// WithImagePullFailedNodes sets the ImagePullFailedNodes field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ImagePullFailedNodes field is set to the value of the last call.
func (b *ImagePrefetchStatusApplyConfiguration) WithImagePullFailedNodes(value int) *ImagePrefetchStatusApplyConfiguration {
	b.ImagePullFailedNodes = &value
	return b
}

// WithSelectedNodes adds the given value to the SelectedNodes field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the SelectedNodes field.
func (b *ImagePrefetchStatusApplyConfiguration) WithSelectedNodes(values ...string) *ImagePrefetchStatusApplyConfiguration {
	for i := range values {
		b.SelectedNodes = append(b.SelectedNodes, values[i])
	}
	return b
}
